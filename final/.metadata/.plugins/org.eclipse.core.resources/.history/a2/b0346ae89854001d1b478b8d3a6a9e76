package ar.edu.panini;

import static org.junit.Assert.*;

import org.junit.Test;

public class PruebaPanini {

	@Test
	public void queSePuedaCrearUnaFigurita() {
		//instanciacion
		Figurita f1 = new Figurita(1, "A", "Argentina", "Messi", 10, 9999.0);
		
		//ejecucion
		
		
		//verificacion
		
		
	}
	@Test
	public void queSePuedaCrearUnAdministrador() {
		//instanciacion
		Usuario admin = new Administrador(1, "pepe");		
		//ejecucion
		
		
		//verificacion
		
		
	}
	@Test
	public void queSePuedaCrearUnUsuarioFinal() {
		//instanciacion
		Usuario admin = new Final(1, "pepe");		
		//ejecucion
		
		
		//verificacion
		
		
	}
	@Test
	public void queUnAdministradorPuedaAgregarUnaFigurita() throws CodigoExistente {
		//instanciacion
		Usuario admin = new Administrador(1, "pepe");	
		Figurita f1 = new Figurita(1, "A", "Argentina", "Messi", 10, 9999.0);
		//ejecucion
		
		admin.agregarFigurita(f1);
		//verificacion
		assertEquals(1, ((Administrador) admin).getListaDeAltaDeFiguritas().size());
		
	}
	@Test
	public void queUnUsuarioFinalPuedaAgregarUnaFigurita() throws CodigoExistente {
		//instanciacion
		Usuario final = new Final(1, "pepe");	
		Figurita f1 = new Figurita(1, "A", "Argentina", "Messi", 10, 9999.0);
		//ejecucion
		
		final.agregarFigurita(f1);
		//verificacion
		assertEquals(1, ((Final) final).getStock().size());
		
	}
	@Test
	public void queLasFiguritasAgregadasDeFormaDesordenadaQuedenOrdenadas() throws CodigoExistente {
		//instanciacion
		Usuario admin = new Final(1, "pepe");	
		Figurita f1 = new Figurita(1, "A", "Argentina", "Messi", 10, 9999.0);
		//ejecucion
		
		admin.agregarFigurita(f1);
		//verificacion
		assertEquals(1, ((Final) admin).getStock().size());
		
	}
	@Test (expected = CodigoExistente.class)
	public void queUnAdministradorNoPuedaAgregarUnaFiguritaExistente() throws CodigoExistente {
		//instanciacion
		Usuario admin = new Administrador(1, "pepe");	
		Figurita f1 = new Figurita(1, "A", "Argentina", "Messi", 10, 9999.0);
		Figurita f2 = new Figurita(1, "A", "Argentina", "Messi", 10, 9999.9);
		//ejecucion
		
		admin.agregarFigurita(f1);
		admin.agregarFigurita(f2);
		//verificacion
		assertEquals(1, ((Administrador) admin).getListaDeAltaDeFiguritas().size());
		
	}
	
	@Test
	public void queUnUsuarioFinalSiPuedaAgregarFiguritasExistentes() throws CodigoExistente {
		//instanciacion
		Usuario admin = new Final(1, "pepe");	
		Figurita f1 = new Figurita(1, "A", "Argentina", "Messi", 10, 9999.0);
		Figurita f2 = new Figurita(1, "A", "Argentina", "Messi", 10, 9999.9);
		//ejecucion
		
		admin.agregarFigurita(f1);
		//verificacion
		assertEquals(1, ((Final) admin).getStock().size());
		
	}
	
}
